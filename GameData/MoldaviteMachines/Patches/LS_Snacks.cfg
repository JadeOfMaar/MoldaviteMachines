@PART[mmgh-agr-*]:NEEDS[SnacksUtils]
{
	MODULE
	{
		name = SnackProcessor
		ConverterName = Snack Processor
		StartActionName = Start Snack Processor
		StopActionName = Stop Snack Processor
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		 
		//Ore masses 0.01 metric tons per unit
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.004
			FlowMode = STAGE_PRIORITY_FLOW
			@Ratio *= #$/refPower$
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 60
			@Ratio *= #$/refPower$
		}

		//Snacks masses 0.001 metric tons per unit
		//1 Ore = 5 Snacks, not all of the ore is usable...
		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.002
			@Ratio *= #$/refPower$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}
@PART[mmgh-agr-*]:NEEDS[SnacksStress]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = GrassTouching
		StartActionName = Touch Grass
		StopActionName = That's enough
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = GrassTouching

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.05
			@Ratio *= #$/refPower$
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.5
		}
	}
}
SKILL_LOSS_CONDITION:NEEDS[SnacksStress]
{
	name = GrassTouching
}

@PART[mmgh-alg-*]:NEEDS[SnacksFreshAir]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scrubber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.000185
			@Ratio *= #$/refPower$
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = Algae
			Ratio = 0.00001
			@Ratio *= #$/refPower$
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000074
			@Ratio *= #$/refPower$
			FlowMode = ALL_VESSEL
		}
	}
}
